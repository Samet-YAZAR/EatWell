

steps:
- bash: |
    echo "================BACKEND=================="
    echo '##vso[task.setVariable variable=stageName]Backend'
    echo 'BackEnd'= $(BACKEND)
    echo 'FrontEnd'= $(FRONTEND)
    echo 'QA'= $(QA)
    echo 'Mobile'= $(MOBILE)
  displayName: ===Echo Variables from Variable GROUP=== 
  condition: succeeded()

# - task: DotNetCoreCLI@2
#   displayName: Restore
#   inputs:
#     command: restore
#     projects: '**/*.csproj'
#     feedsToUse: config
#     nugetConfigPath: NuGet.config    # Relative to root of the repository
#     externalFeedCredentials: <Name of the NuGet service connection>

# - task: DotNetCoreCLI@2
#   displayName: Build
#   inputs:
#     command: build
#     projects: '**/*.csproj'
#     arguments: '--configuration $(buildConfiguration)' # Update this to match your need 

# - task: DotNetCoreCLI@2
#   inputs:
#     command: test
#     projects: '**/*Tests/*.csproj'
#     arguments: '--configuration $(buildConfiguration)'    

# # # ...
# # # do this after your tests have run
# # - script: dotnet test <test-project> --logger trx
# # - task: PublishTestResults@2
# #   condition: succeededOrFailed()
# #   inputs:
# #     testRunner: VSTest
# #     testResultsFiles: '**/*.trx'  

# # ...
# # do this after you've built your app, near the end of your pipeline in most cases
# # for example, you do this before you deploy to an Azure web app on Windows
# - task: DotNetCoreCLI@2
#   inputs:
#     command: publish
#     publishWebProjects: True
#     arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
#     zipAfterPublish: True  